install_official_git_client: &install_official_git_client
  name: Install Official Git Client
  no_output_timeout: "1h"
  command: |
    set -e
    sudo apt-get -qq update
    sudo apt-get -qq install openssh-client git

pytorch_tutorial_build_defaults: &pytorch_tutorial_build_defaults
  machine:
    image: default
  steps:
  - checkout
  - run:
      name: Set Up CI Environment
      no_output_timeout: "1h"
      command: |
        set -e

        curl -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
        echo "deb https://nvidia.github.io/libnvidia-container/ubuntu14.04/amd64 /" | sudo tee -a /etc/apt/sources.list.d/nvidia-docker.list
        echo "deb https://nvidia.github.io/nvidia-container-runtime/ubuntu14.04/amd64 /" | sudo tee -a /etc/apt/sources.list.d/nvidia-docker.list
        echo "deb https://nvidia.github.io/nvidia-docker/ubuntu14.04/amd64 /" | sudo tee -a /etc/apt/sources.list.d/nvidia-docker.list

        sudo apt-get -qq update
        sudo apt-get -qq remove linux-image-generic linux-headers-generic linux-generic
        sudo apt-get -qq install \
          linux-headers-$(uname -r) \
          linux-image-generic \
          moreutils \
          nvidia-docker2 \
          expect-dev

        sudo pkill -SIGHUP dockerd

        sudo pip -q install awscli==1.16.35

        if [ -n "${CUDA_VERSION}" ]; then
          wget 'https://s3.amazonaws.com/ossci-linux/nvidia_driver/NVIDIA-Linux-x86_64-396.26.run'
          sudo /bin/bash ./NVIDIA-Linux-x86_64-396.26.run -s --no-drm
          nvidia-smi
        fi

        # This IAM user only allows read-write access to ECR
        export AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_ECR_READ_ONLY}
        export AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_ECR_READ_ONLY}
        eval $(aws ecr get-login --region us-east-1 --no-include-email)
  - run:
      name: Build
      no_output_timeout: "20h"
      command: |
        set -e

        # Get latest PyTorch docker image version
        curl -O https://raw.githubusercontent.com/pytorch/pytorch/master/.circleci/config.yml
        while read line; do
          if [[ "$line" == *PyTorchDockerVersion* ]]; then
            export pyTorchDockerImageTag=${line:23}  # len("# PyTorchDockerVersion:") == 23
            echo "PyTorchDockerImageTag: "${pyTorchDockerImageTag}
            break
          fi
        done < config.yml

        cat >/home/circleci/project/ci_build_script.sh <<EOL
        # =================== The following code will be executed inside Docker container ===================
        set -ex

        .jenkins/build.sh
        # =================== The above code will be executed inside Docker container ===================
        EOL
        chmod +x /home/circleci/project/ci_build_script.sh

        export DOCKER_IMAGE=${DOCKER_IMAGE}:${pyTorchDockerImageTag}
        echo "DOCKER_IMAGE: "${DOCKER_IMAGE}
        docker pull ${DOCKER_IMAGE} >/dev/null
        if [ -n "${CUDA_VERSION}" ]; then
          export id=$(docker run --runtime=nvidia -t -d -w /var/lib/jenkins ${DOCKER_IMAGE})
        else
          export id=$(docker run -t -d -w /var/lib/jenkins ${DOCKER_IMAGE})
        fi

        echo "declare -x JOB_BASE_NAME=${CIRCLE_JOB}" > /home/circleci/project/env
        echo "declare -x COMMIT_ID=${CIRCLE_SHA1}" >> /home/circleci/project/env
        echo "declare -x COMMIT_SOURCE=${CIRCLE_BRANCH}" >> /home/circleci/project/env
        # DANGER! DO NOT REMOVE THE `set +x` SETTING HERE!
        set +x
        if [[ "$CIRCLE_BRANCH" == master ]]; then
          if [ -z "${CIRCLECI_AWS_ACCESS_KEY_FOR_PYTORCH_TUTORIAL_BUILD_MASTER_S3_BUCKET}" ]; then exit 1; fi
          if [ -z "${CIRCLECI_AWS_SECRET_KEY_FOR_PYTORCH_TUTORIAL_BUILD_MASTER_S3_BUCKET}" ]; then exit 1; fi
          if [ -z "${GITHUB_PYTORCHBOT_USERNAME}" ]; then exit 1; fi
          if [ -z "${GITHUB_PYTORCHBOT_TOKEN}" ]; then exit 1; fi

          echo "declare -x AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_PYTORCH_TUTORIAL_BUILD_MASTER_S3_BUCKET}" >> /home/circleci/project/env
          echo "declare -x AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_PYTORCH_TUTORIAL_BUILD_MASTER_S3_BUCKET}" >> /home/circleci/project/env
          echo "declare -x GITHUB_PYTORCHBOT_USERNAME=${GITHUB_PYTORCHBOT_USERNAME}" >> /home/circleci/project/env
          echo "declare -x GITHUB_PYTORCHBOT_TOKEN=${GITHUB_PYTORCHBOT_TOKEN}" >> /home/circleci/project/env
        else
          echo "declare -x AWS_ACCESS_KEY_ID=${CIRCLECI_AWS_ACCESS_KEY_FOR_PYTORCH_TUTORIAL_BUILD_PR_S3_BUCKET}" >> /home/circleci/project/env
          echo "declare -x AWS_SECRET_ACCESS_KEY=${CIRCLECI_AWS_SECRET_KEY_FOR_PYTORCH_TUTORIAL_BUILD_PR_S3_BUCKET}" >> /home/circleci/project/env
        fi
        set -x

        docker cp /home/circleci/project/. "$id:/var/lib/jenkins/workspace"

        export COMMAND='((echo "source ./workspace/env" && echo "sudo chown -R jenkins workspace && cd workspace && ./ci_build_script.sh") | docker exec -u jenkins -i "$id" bash) 2>&1'
        echo ${COMMAND} > ./command.sh && unbuffer bash ./command.sh | ts

pytorch_tutorial_build_worker_defaults: &pytorch_tutorial_build_worker_defaults
  environment:
    DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-cuda8-cudnn6-py3"
    CUDA_VERSION: "8"
  resource_class: gpu.medium
  <<: *pytorch_tutorial_build_defaults

pytorch_tutorial_build_manager_defaults: &pytorch_tutorial_build_manager_defaults
  environment:
    DOCKER_IMAGE: "308535385114.dkr.ecr.us-east-1.amazonaws.com/pytorch/pytorch-linux-xenial-cuda8-cudnn6-py3"
  resource_class: medium
  <<: *pytorch_tutorial_build_defaults

version: 2
jobs:
  pytorch_tutorial_build_worker_0:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_1:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_2:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_3:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_4:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_5:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_6:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_7:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_8:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_9:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_10:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_11:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_12:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_13:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_14:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_15:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_16:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_17:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_18:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_worker_19:
    <<: *pytorch_tutorial_build_worker_defaults

  pytorch_tutorial_build_manager:
    <<: *pytorch_tutorial_build_manager_defaults

workflows:
  version: 2
  build:
    jobs:
      - pytorch_tutorial_build_worker_0:
          context: org-member
      - pytorch_tutorial_build_worker_1:
          context: org-member
      - pytorch_tutorial_build_worker_2:
          context: org-member
      - pytorch_tutorial_build_worker_3:
          context: org-member
      - pytorch_tutorial_build_worker_4:
          context: org-member
      - pytorch_tutorial_build_worker_5:
          context: org-member
      - pytorch_tutorial_build_worker_6:
          context: org-member
      - pytorch_tutorial_build_worker_7:
          context: org-member
      - pytorch_tutorial_build_worker_8:
          context: org-member
      - pytorch_tutorial_build_worker_9:
          context: org-member
      - pytorch_tutorial_build_worker_10:
          context: org-member
      - pytorch_tutorial_build_worker_11:
          context: org-member
      - pytorch_tutorial_build_worker_12:
          context: org-member
      - pytorch_tutorial_build_worker_13:
          context: org-member
      - pytorch_tutorial_build_worker_14:
          context: org-member
      - pytorch_tutorial_build_worker_15:
          context: org-member
      - pytorch_tutorial_build_worker_16:
          context: org-member
      - pytorch_tutorial_build_worker_17:
          context: org-member
      - pytorch_tutorial_build_worker_18:
          context: org-member
      - pytorch_tutorial_build_worker_19:
          context: org-member
      - pytorch_tutorial_build_manager:
          context: org-member
